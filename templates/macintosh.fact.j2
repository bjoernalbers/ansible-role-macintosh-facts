#!/usr/bin/env ruby -w

require 'open3'
require 'json'

class Info
  def initialize
    @stdout, @status = Open3.capture2(*command)
  end

  def available?
    @status.success? && @stdout && !@stdout.empty?
  end
end

class HardwareData < Info
  def command
    %w[
      system_profiler SPHardwareDataType
    ]
  end

  def model_identifier
    @model_identifier ||= find 'Model Identifier'
  end

  def model_name
    @model_name ||= find 'Model Name'
  end

  def serial_number
    @serial_number ||= find 'Serial Number'
  end

  def find(key)
    $1 if @stdout[/^\s+#{key}.*:\s(.+)$/]
  end
end

class AppleWebService < Info
  def initialize(serial_number)
    @serial_number = serial_number
    @stdout, @status = Open3.capture2(*command)
  end

  def command
    %W[
      curl --silent
      https://support-sp.apple.com/sp/product?cc=#{query_param}
    ]
  end

  def query_param
    @serial_number[-4..-1]
  end

  def marketing_name
    $1 if @stdout[%r{<configCode>(.+)</configCode>}]
  end
end

class ComputerInformation < Info
  def command
    %w[
      /usr/libexec/PlistBuddy -c Print
      /Library/Preferences/com.apple.RemoteDesktop.plist
    ]
  end

  def to_hash
    (1..4).inject({}) { |h,i| h["info#{i}".to_sym] = find "Text#{i}"; h }
  end

  def find(key)
    $1 if @stdout[/^\s+#{key}\s=\s(.+)$/]
  end
end

facts = {}

hardware_data = HardwareData.new
if hardware_data.available?
  facts[:model_identifier] = hardware_data.model_identifier
  facts[:model_name]       = hardware_data.model_name
  facts[:serial_number]    = hardware_data.serial_number
end

if hardware_data.available? && hardware_data.serial_number
  apple_web_service = AppleWebService.new(hardware_data.serial_number)
  if apple_web_service.available?
    facts[:marketing_name] = apple_web_service.marketing_name
  end
end

computer_information = ComputerInformation.new
if computer_information.available?
  facts[:computer_information] = computer_information.to_hash
end

puts JSON.pretty_generate(facts)
